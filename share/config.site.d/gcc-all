# Be bourne shell compliant.

test -z "$CC" && CC=gcc

# -Wall and -Wextra enable groups of other warning flags.
# Do not repeat them. For more details, see [1] and [2].
#
# Warning flags go first, followed by code generation convention
# flags (i.e. -f..)[3].
# DO NOT list machine-specific flags (i.e. -m..)[4] here.
#
# --
# [1]: https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wall
# [2]: https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-W
# [3]: https://gcc.gnu.org/onlinedocs/gcc/Code-Gen-Options.html
# [4]: https://gcc.gnu.org/onlinedocs/gcc/Submodel-Options.html
test -z "$CFLAGS"                                                            \
    && CFLAGS="-std=gnu99"                                                   \
    && CFLAGS="$CFLAGS -O0 -ggdb3"                                           \
    && CFLAGS="$CFLAGS -Wall"                                                \
    && CFLAGS="$CFLAGS -Wextra"                                              \
    && CFLAGS="$CFLAGS -Winit-self"                                          \
    && CFLAGS="$CFLAGS -Wmissing-declarations"                               \
    && CFLAGS="$CFLAGS -Wmissing-prototypes"                                 \
    && CFLAGS="$CFLAGS -Wmissing-field-initializers"                         \
    && CFLAGS="$CFLAGS -Wredundant-decls"                                    \
    && CFLAGS="$CFLAGS -Wdangling-else"                                      \
    && CFLAGS="$CFLAGS -Wshadow"                                             \
    && CFLAGS="$CFLAGS -Wnested-externs"                                     \
    && CFLAGS="$CFLAGS -Wunused"                                             \
    && CFLAGS="$CFLAGS -Wunused-parameter"                                   \
    && CFLAGS="$CFLAGS -Wfloat-conversion"                                   \
    && CFLAGS="$CFLAGS -Wincompatible-pointer-types"                         \
    && CFLAGS="$CFLAGS -Wnull-dereference"                                   \
    && CFLAGS="$CFLAGS -Wpointer-arith"                                      \
    && CFLAGS="$CFLAGS -Wno-null-pointer-subtraction"                        \
    && CFLAGS="$CFLAGS -Wno-overlength-strings"                              \
    && CFLAGS="$CFLAGS -Wunreachable-code"                                   \
    && CFLAGS="$CFLAGS -Wformat"                                             \
    && CFLAGS="$CFLAGS -Wformat-extra-args"                                  \
    && CFLAGS="$CFLAGS -Wold-style-definition"                               \
    && CFLAGS="$CFLAGS -Wunused-result"                                      \
    && CFLAGS="$CFLAGS -Wmisleading-indentation"                             \
    && CFLAGS="$CFLAGS -Wimplicit-function-declaration"                      \
    && CFLAGS="$CFLAGS -Wendif-labels"                                       \
    && CFLAGS="$CFLAGS -Winvalid-pch"                                        \
    && CFLAGS="$CFLAGS -Wformat-security"                                    \
    && CFLAGS="$CFLAGS -Wcast-function-type"                                 \
    && CFLAGS="$CFLAGS -fstrict-aliasing"

# flags for gcc
test -z "$CFLAGS"                                                            \
    && CFLAGS="$CFLAGS -Wno-maybe-uninitialized"                             \
    && CFLAGS="$CFLAGS -Wjump-misses-init"                                   \
    && CFLAGS="$CFLAGS -Wformat-signedness"

# flags for 'all build'
test -z "$CFLAGS"                                                            \
    && CFLAGS="$CFLAGS -Wcast-align"
